package main

var stmtTypes = Types{{
	Name:    "AssignmentStatement",
	Fields:  "semantic.AssignmentStatement",
	Comment: "",
}, {
	Name:    "BlockStatement",
	Fields:  "semantic.BlockStatement",
	Comment: "",
}, {
	Name:    "Body",
	Fields:  "semantic.Body",
	Comment: "",
}, {
	Name:    "CaseWhenStatement",
	Fields:  "semantic.CaseWhenStatement",
	Comment: "",
}, {
	Name:    "CloseStatement",
	Fields:  "semantic.CloseStatement",
	Comment: "",
}, {
	Name:    "CommitStatement",
	Fields:  "semantic.CommitStatement",
	Comment: "",
}, {
	Name:    "ContinueStatement",
	Fields:  "semantic.ContinueStatement",
	Comment: "",
}, {
	Name:    "CreateFunctionStatement",
	Fields:  "semantic.CreateFunctionStatement",
	Comment: "",
}, {
	Name:    "CreateNestTableStatement",
	Fields:  "semantic.CreateNestTableStatement",
	Comment: "",
}, {
	Name:    "CreatePackageBodyStatement",
	Fields:  "semantic.CreatePackageBodyStatement",
	Comment: "",
}, {
	Name:    "CreatePackageStatement",
	Fields:  "semantic.CreatePackageStatement",
	Comment: "",
}, {
	Name:    "CreateProcedureStatement",
	Fields:  "semantic.CreateProcedureStatement",
	Comment: "",
}, {
	Name:    "CreateSynonymStatement",
	Fields:  "semantic.CreateSynonymStatement",
	Comment: "",
}, {
	Name:    "CreateTypeStatement",
	Fields:  "semantic.CreateTypeStatement",
	Comment: "",
}, {
	Name:    "DeleteStatement",
	Fields:  "semantic.DeleteStatement",
	Comment: "",
}, {
	Name:    "DropFunctionStatement",
	Fields:  "semantic.DropFunctionStatement",
	Comment: "",
}, {
	Name:    "DropPackageStatement",
	Fields:  "semantic.DropPackageStatement",
	Comment: "",
}, {
	Name:    "DropProcedureStatement",
	Fields:  "semantic.DropProcedureStatement",
	Comment: "",
}, {
	Name:    "DropTriggerStatement",
	Fields:  "semantic.DropTriggerStatement",
	Comment: "",
}, {
	Name:    "ExecuteImmediateStatement",
	Fields:  "semantic.ExecuteImmediateStatement",
	Comment: "",
}, {
	Name:    "ExitStatement",
	Fields:  "semantic.ExitStatement",
	Comment: "",
}, {
	Name:    "FetchStatement",
	Fields:  "semantic.FetchStatement",
	Comment: "",
}, {
	Name:    "GotoStatement",
	Fields:  "semantic.GotoStatement",
	Comment: "",
}, {
	Name:    "IfStatement",
	Fields:  "semantic.IfStatement",
	Comment: "",
}, {
	Name:    "InsertStatement",
	Fields:  "semantic.InsertStatement",
	Comment: "",
}, {
	Name:    "LabelDeclaration",
	Fields:  "semantic.LabelDeclaration",
	Comment: "",
}, {
	Name:    "LoopStatement",
	Fields:  "semantic.LoopStatement",
	Comment: "",
}, {
	Name:    "MergeInsertStatement",
	Fields:  "semantic.MergeInsertStatement",
	Comment: "",
}, {
	Name:    "MergeStatement",
	Fields:  "semantic.MergeStatement",
	Comment: "",
}, {
	Name:    "MergeUpdateStatement",
	Fields:  "semantic.MergeUpdateStatement",
	Comment: "",
}, {
	Name:    "NullStatement",
	Fields:  "semantic.NullStatement",
	Comment: "",
}, {
	Name:    "OpenForStatement",
	Fields:  "semantic.OpenForStatement",
	Comment: "",
}, {
	Name:    "OpenStatement",
	Fields:  "semantic.OpenStatement",
	Comment: "",
}, {
	Name:    "ProcedureCall",
	Fields:  "semantic.ProcedureCall",
	Comment: "",
}, {
	Name:    "RaiseStatement",
	Fields:  "semantic.RaiseStatement",
	Comment: "",
}, {
	Name:    "ReturnStatement",
	Fields:  "semantic.ReturnStatement",
	Comment: "",
}, {
	Name:    "RollbackStatement",
	Fields:  "semantic.RollbackStatement",
	Comment: "",
}, {
	Name:    "SelectStatement",
	Fields:  "semantic.SelectStatement",
	Comment: "",
}, {
	Name:    "SetOperationStatement",
	Fields:  "semantic.SetOperationStatement",
	Comment: "",
}, {
	Name:    "UpdateStatement",
	Fields:  "semantic.UpdateStatement",
	Comment: "",
}}
