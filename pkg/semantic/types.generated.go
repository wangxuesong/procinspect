// Code generated by gen-ast-types. DO NOT EDIT.

package semantic

import (
	"encoding/gob"
	"errors"
	"sync"
)

type ExprVisitor interface {
	VisitAliasExpression(v *AliasExpression) (result interface{}, err error)
	VisitBetweenExpression(v *BetweenExpression) (result interface{}, err error)
	VisitBinaryExpression(v *BinaryExpression) (result interface{}, err error)
	VisitBindNameExpression(v *BindNameExpression) (result interface{}, err error)
	VisitCastExpression(v *CastExpression) (result interface{}, err error)
	VisitCommonTableExpression(v *CommonTableExpression) (result interface{}, err error)
	VisitCursorAttribute(v *CursorAttribute) (result interface{}, err error)
	VisitDotExpression(v *DotExpression) (result interface{}, err error)
	VisitExistsExpression(v *ExistsExpression) (result interface{}, err error)
	VisitExprListExpression(v *ExprListExpression) (result interface{}, err error)
	VisitForUpdateOptionsExpression(v *ForUpdateOptionsExpression) (result interface{}, err error)
	VisitFunctionCallExpression(v *FunctionCallExpression) (result interface{}, err error)
	VisitInExpression(v *InExpression) (result interface{}, err error)
	VisitLikeExpression(v *LikeExpression) (result interface{}, err error)
	VisitListaggExpression(v *ListaggExpression) (result interface{}, err error)
	VisitNameExpression(v *NameExpression) (result interface{}, err error)
	VisitNamedArgumentExpression(v *NamedArgumentExpression) (result interface{}, err error)
	VisitNullExpression(v *NullExpression) (result interface{}, err error)
	VisitNumericLiteral(v *NumericLiteral) (result interface{}, err error)
	VisitOrderByClause(v *OrderByClause) (result interface{}, err error)
	VisitOrderByElement(v *OrderByElement) (result interface{}, err error)
	VisitOuterJoinExpression(v *OuterJoinExpression) (result interface{}, err error)
	VisitQueryExpression(v *QueryExpression) (result interface{}, err error)
	VisitRelationalExpression(v *RelationalExpression) (result interface{}, err error)
	VisitSignExpression(v *SignExpression) (result interface{}, err error)
	VisitStatementExpression(v *StatementExpression) (result interface{}, err error)
	VisitStringLiteral(v *StringLiteral) (result interface{}, err error)
	VisitUnaryLogicalExpression(v *UnaryLogicalExpression) (result interface{}, err error)
	VisitUsingClause(v *UsingClause) (result interface{}, err error)
	VisitUsingElement(v *UsingElement) (result interface{}, err error)
}

type StubExprVisitor struct{ ExprVisitor }

var _ ExprVisitor = &StubExprVisitor{}

func (s StubExprVisitor) VisitAliasExpression(_ *AliasExpression) (interface{}, error) {
	return nil, errors.New("visit func for AliasExpression is not implemented")
}

func (s StubExprVisitor) VisitBetweenExpression(_ *BetweenExpression) (interface{}, error) {
	return nil, errors.New("visit func for BetweenExpression is not implemented")
}

func (s StubExprVisitor) VisitBinaryExpression(_ *BinaryExpression) (interface{}, error) {
	return nil, errors.New("visit func for BinaryExpression is not implemented")
}

func (s StubExprVisitor) VisitBindNameExpression(_ *BindNameExpression) (interface{}, error) {
	return nil, errors.New("visit func for BindNameExpression is not implemented")
}

func (s StubExprVisitor) VisitCastExpression(_ *CastExpression) (interface{}, error) {
	return nil, errors.New("visit func for CastExpression is not implemented")
}

func (s StubExprVisitor) VisitCommonTableExpression(_ *CommonTableExpression) (interface{}, error) {
	return nil, errors.New("visit func for CommonTableExpression is not implemented")
}

func (s StubExprVisitor) VisitCursorAttribute(_ *CursorAttribute) (interface{}, error) {
	return nil, errors.New("visit func for CursorAttribute is not implemented")
}

func (s StubExprVisitor) VisitDotExpression(_ *DotExpression) (interface{}, error) {
	return nil, errors.New("visit func for DotExpression is not implemented")
}

func (s StubExprVisitor) VisitExistsExpression(_ *ExistsExpression) (interface{}, error) {
	return nil, errors.New("visit func for ExistsExpression is not implemented")
}

func (s StubExprVisitor) VisitExprListExpression(_ *ExprListExpression) (interface{}, error) {
	return nil, errors.New("visit func for ExprListExpression is not implemented")
}

func (s StubExprVisitor) VisitForUpdateOptionsExpression(_ *ForUpdateOptionsExpression) (interface{}, error) {
	return nil, errors.New("visit func for ForUpdateOptionsExpression is not implemented")
}

func (s StubExprVisitor) VisitFunctionCallExpression(_ *FunctionCallExpression) (interface{}, error) {
	return nil, errors.New("visit func for FunctionCallExpression is not implemented")
}

func (s StubExprVisitor) VisitInExpression(_ *InExpression) (interface{}, error) {
	return nil, errors.New("visit func for InExpression is not implemented")
}

func (s StubExprVisitor) VisitLikeExpression(_ *LikeExpression) (interface{}, error) {
	return nil, errors.New("visit func for LikeExpression is not implemented")
}

func (s StubExprVisitor) VisitListaggExpression(_ *ListaggExpression) (interface{}, error) {
	return nil, errors.New("visit func for ListaggExpression is not implemented")
}

func (s StubExprVisitor) VisitNameExpression(_ *NameExpression) (interface{}, error) {
	return nil, errors.New("visit func for NameExpression is not implemented")
}

func (s StubExprVisitor) VisitNamedArgumentExpression(_ *NamedArgumentExpression) (interface{}, error) {
	return nil, errors.New("visit func for NamedArgumentExpression is not implemented")
}

func (s StubExprVisitor) VisitNullExpression(_ *NullExpression) (interface{}, error) {
	return nil, errors.New("visit func for NullExpression is not implemented")
}

func (s StubExprVisitor) VisitNumericLiteral(_ *NumericLiteral) (interface{}, error) {
	return nil, errors.New("visit func for NumericLiteral is not implemented")
}

func (s StubExprVisitor) VisitOrderByClause(_ *OrderByClause) (interface{}, error) {
	return nil, errors.New("visit func for OrderByClause is not implemented")
}

func (s StubExprVisitor) VisitOrderByElement(_ *OrderByElement) (interface{}, error) {
	return nil, errors.New("visit func for OrderByElement is not implemented")
}

func (s StubExprVisitor) VisitOuterJoinExpression(_ *OuterJoinExpression) (interface{}, error) {
	return nil, errors.New("visit func for OuterJoinExpression is not implemented")
}

func (s StubExprVisitor) VisitQueryExpression(_ *QueryExpression) (interface{}, error) {
	return nil, errors.New("visit func for QueryExpression is not implemented")
}

func (s StubExprVisitor) VisitRelationalExpression(_ *RelationalExpression) (interface{}, error) {
	return nil, errors.New("visit func for RelationalExpression is not implemented")
}

func (s StubExprVisitor) VisitSignExpression(_ *SignExpression) (interface{}, error) {
	return nil, errors.New("visit func for SignExpression is not implemented")
}

func (s StubExprVisitor) VisitStatementExpression(_ *StatementExpression) (interface{}, error) {
	return nil, errors.New("visit func for StatementExpression is not implemented")
}

func (s StubExprVisitor) VisitStringLiteral(_ *StringLiteral) (interface{}, error) {
	return nil, errors.New("visit func for StringLiteral is not implemented")
}

func (s StubExprVisitor) VisitUnaryLogicalExpression(_ *UnaryLogicalExpression) (interface{}, error) {
	return nil, errors.New("visit func for UnaryLogicalExpression is not implemented")
}

func (s StubExprVisitor) VisitUsingClause(_ *UsingClause) (interface{}, error) {
	return nil, errors.New("visit func for UsingClause is not implemented")
}

func (s StubExprVisitor) VisitUsingElement(_ *UsingElement) (interface{}, error) {
	return nil, errors.New("visit func for UsingElement is not implemented")
}

func (b *AliasExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitAliasExpression(b)
}

func (b *BetweenExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitBetweenExpression(b)
}

func (b *BinaryExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitBinaryExpression(b)
}

func (b *BindNameExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitBindNameExpression(b)
}

func (b *CastExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitCastExpression(b)
}

func (b *CommonTableExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitCommonTableExpression(b)
}

func (b *CursorAttribute) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitCursorAttribute(b)
}

func (b *DotExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitDotExpression(b)
}

func (b *ExistsExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitExistsExpression(b)
}

func (b *ExprListExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitExprListExpression(b)
}

func (b *ForUpdateOptionsExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitForUpdateOptionsExpression(b)
}

func (b *FunctionCallExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitFunctionCallExpression(b)
}

func (b *InExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitInExpression(b)
}

func (b *LikeExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitLikeExpression(b)
}

func (b *ListaggExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitListaggExpression(b)
}

func (b *NameExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitNameExpression(b)
}

func (b *NamedArgumentExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitNamedArgumentExpression(b)
}

func (b *NullExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitNullExpression(b)
}

func (b *NumericLiteral) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitNumericLiteral(b)
}

func (b *OrderByClause) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitOrderByClause(b)
}

func (b *OrderByElement) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitOrderByElement(b)
}

func (b *OuterJoinExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitOuterJoinExpression(b)
}

func (b *QueryExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitQueryExpression(b)
}

func (b *RelationalExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitRelationalExpression(b)
}

func (b *SignExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitSignExpression(b)
}

func (b *StatementExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitStatementExpression(b)
}

func (b *StringLiteral) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitStringLiteral(b)
}

func (b *UnaryLogicalExpression) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitUnaryLogicalExpression(b)
}

func (b *UsingClause) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitUsingClause(b)
}

func (b *UsingElement) ExprAccept(visitor ExprVisitor) (result interface{}, err error) {
	return visitor.VisitUsingElement(b)
}

type StmtVisitor interface {
	VisitAssignmentStatement(v *AssignmentStatement) (err error)
	VisitBlockStatement(v *BlockStatement) (err error)
	VisitBody(v *Body) (err error)
	VisitCaseWhenStatement(v *CaseWhenStatement) (err error)
	VisitCloseStatement(v *CloseStatement) (err error)
	VisitCommitStatement(v *CommitStatement) (err error)
	VisitContinueStatement(v *ContinueStatement) (err error)
	VisitCreateFunctionStatement(v *CreateFunctionStatement) (err error)
	VisitCreateNestTableStatement(v *CreateNestTableStatement) (err error)
	VisitCreatePackageBodyStatement(v *CreatePackageBodyStatement) (err error)
	VisitCreatePackageStatement(v *CreatePackageStatement) (err error)
	VisitCreateProcedureStatement(v *CreateProcedureStatement) (err error)
	VisitCreateSynonymStatement(v *CreateSynonymStatement) (err error)
	VisitCreateTypeStatement(v *CreateTypeStatement) (err error)
	VisitDeleteStatement(v *DeleteStatement) (err error)
	VisitDropFunctionStatement(v *DropFunctionStatement) (err error)
	VisitDropPackageStatement(v *DropPackageStatement) (err error)
	VisitDropProcedureStatement(v *DropProcedureStatement) (err error)
	VisitDropTriggerStatement(v *DropTriggerStatement) (err error)
	VisitExecuteImmediateStatement(v *ExecuteImmediateStatement) (err error)
	VisitExitStatement(v *ExitStatement) (err error)
	VisitFetchStatement(v *FetchStatement) (err error)
	VisitGotoStatement(v *GotoStatement) (err error)
	VisitIfStatement(v *IfStatement) (err error)
	VisitInsertStatement(v *InsertStatement) (err error)
	VisitLabelDeclaration(v *LabelDeclaration) (err error)
	VisitLoopStatement(v *LoopStatement) (err error)
	VisitMergeInsertStatement(v *MergeInsertStatement) (err error)
	VisitMergeStatement(v *MergeStatement) (err error)
	VisitMergeUpdateStatement(v *MergeUpdateStatement) (err error)
	VisitNullStatement(v *NullStatement) (err error)
	VisitOpenForStatement(v *OpenForStatement) (err error)
	VisitOpenStatement(v *OpenStatement) (err error)
	VisitProcedureCall(v *ProcedureCall) (err error)
	VisitRaiseStatement(v *RaiseStatement) (err error)
	VisitReturnStatement(v *ReturnStatement) (err error)
	VisitRollbackStatement(v *RollbackStatement) (err error)
	VisitSelectStatement(v *SelectStatement) (err error)
	VisitSetOperationStatement(v *SetOperationStatement) (err error)
	VisitUpdateStatement(v *UpdateStatement) (err error)
	VisitAutonomousTransactionDeclaration(v *AutonomousTransactionDeclaration) (err error)
	VisitCursorDeclaration(v *CursorDeclaration) (err error)
	VisitExceptionDeclaration(v *ExceptionDeclaration) (err error)
	VisitFunctionDeclaration(v *FunctionDeclaration) (err error)
	VisitNestTableTypeDeclaration(v *NestTableTypeDeclaration) (err error)
	VisitVariableDeclaration(v *VariableDeclaration) (err error)
}

type StubStmtVisitor struct{ StmtVisitor }

var _ StmtVisitor = &StubStmtVisitor{}

func (s StubStmtVisitor) VisitAssignmentStatement(_ *AssignmentStatement) error {
	return errors.New("visit func for AssignmentStatement is not implemented")
}

func (s StubStmtVisitor) VisitBlockStatement(_ *BlockStatement) error {
	return errors.New("visit func for BlockStatement is not implemented")
}

func (s StubStmtVisitor) VisitBody(_ *Body) error {
	return errors.New("visit func for Body is not implemented")
}

func (s StubStmtVisitor) VisitCaseWhenStatement(_ *CaseWhenStatement) error {
	return errors.New("visit func for CaseWhenStatement is not implemented")
}

func (s StubStmtVisitor) VisitCloseStatement(_ *CloseStatement) error {
	return errors.New("visit func for CloseStatement is not implemented")
}

func (s StubStmtVisitor) VisitCommitStatement(_ *CommitStatement) error {
	return errors.New("visit func for CommitStatement is not implemented")
}

func (s StubStmtVisitor) VisitContinueStatement(_ *ContinueStatement) error {
	return errors.New("visit func for ContinueStatement is not implemented")
}

func (s StubStmtVisitor) VisitCreateFunctionStatement(_ *CreateFunctionStatement) error {
	return errors.New("visit func for CreateFunctionStatement is not implemented")
}

func (s StubStmtVisitor) VisitCreateNestTableStatement(_ *CreateNestTableStatement) error {
	return errors.New("visit func for CreateNestTableStatement is not implemented")
}

func (s StubStmtVisitor) VisitCreatePackageBodyStatement(_ *CreatePackageBodyStatement) error {
	return errors.New("visit func for CreatePackageBodyStatement is not implemented")
}

func (s StubStmtVisitor) VisitCreatePackageStatement(_ *CreatePackageStatement) error {
	return errors.New("visit func for CreatePackageStatement is not implemented")
}

func (s StubStmtVisitor) VisitCreateProcedureStatement(_ *CreateProcedureStatement) error {
	return errors.New("visit func for CreateProcedureStatement is not implemented")
}

func (s StubStmtVisitor) VisitCreateSynonymStatement(_ *CreateSynonymStatement) error {
	return errors.New("visit func for CreateSynonymStatement is not implemented")
}

func (s StubStmtVisitor) VisitCreateTypeStatement(_ *CreateTypeStatement) error {
	return errors.New("visit func for CreateTypeStatement is not implemented")
}

func (s StubStmtVisitor) VisitDeleteStatement(_ *DeleteStatement) error {
	return errors.New("visit func for DeleteStatement is not implemented")
}

func (s StubStmtVisitor) VisitDropFunctionStatement(_ *DropFunctionStatement) error {
	return errors.New("visit func for DropFunctionStatement is not implemented")
}

func (s StubStmtVisitor) VisitDropPackageStatement(_ *DropPackageStatement) error {
	return errors.New("visit func for DropPackageStatement is not implemented")
}

func (s StubStmtVisitor) VisitDropProcedureStatement(_ *DropProcedureStatement) error {
	return errors.New("visit func for DropProcedureStatement is not implemented")
}

func (s StubStmtVisitor) VisitDropTriggerStatement(_ *DropTriggerStatement) error {
	return errors.New("visit func for DropTriggerStatement is not implemented")
}

func (s StubStmtVisitor) VisitExecuteImmediateStatement(_ *ExecuteImmediateStatement) error {
	return errors.New("visit func for ExecuteImmediateStatement is not implemented")
}

func (s StubStmtVisitor) VisitExitStatement(_ *ExitStatement) error {
	return errors.New("visit func for ExitStatement is not implemented")
}

func (s StubStmtVisitor) VisitFetchStatement(_ *FetchStatement) error {
	return errors.New("visit func for FetchStatement is not implemented")
}

func (s StubStmtVisitor) VisitGotoStatement(_ *GotoStatement) error {
	return errors.New("visit func for GotoStatement is not implemented")
}

func (s StubStmtVisitor) VisitIfStatement(_ *IfStatement) error {
	return errors.New("visit func for IfStatement is not implemented")
}

func (s StubStmtVisitor) VisitInsertStatement(_ *InsertStatement) error {
	return errors.New("visit func for InsertStatement is not implemented")
}

func (s StubStmtVisitor) VisitLabelDeclaration(_ *LabelDeclaration) error {
	return errors.New("visit func for LabelDeclaration is not implemented")
}

func (s StubStmtVisitor) VisitLoopStatement(_ *LoopStatement) error {
	return errors.New("visit func for LoopStatement is not implemented")
}

func (s StubStmtVisitor) VisitMergeInsertStatement(_ *MergeInsertStatement) error {
	return errors.New("visit func for MergeInsertStatement is not implemented")
}

func (s StubStmtVisitor) VisitMergeStatement(_ *MergeStatement) error {
	return errors.New("visit func for MergeStatement is not implemented")
}

func (s StubStmtVisitor) VisitMergeUpdateStatement(_ *MergeUpdateStatement) error {
	return errors.New("visit func for MergeUpdateStatement is not implemented")
}

func (s StubStmtVisitor) VisitNullStatement(_ *NullStatement) error {
	return errors.New("visit func for NullStatement is not implemented")
}

func (s StubStmtVisitor) VisitOpenForStatement(_ *OpenForStatement) error {
	return errors.New("visit func for OpenForStatement is not implemented")
}

func (s StubStmtVisitor) VisitOpenStatement(_ *OpenStatement) error {
	return errors.New("visit func for OpenStatement is not implemented")
}

func (s StubStmtVisitor) VisitProcedureCall(_ *ProcedureCall) error {
	return errors.New("visit func for ProcedureCall is not implemented")
}

func (s StubStmtVisitor) VisitRaiseStatement(_ *RaiseStatement) error {
	return errors.New("visit func for RaiseStatement is not implemented")
}

func (s StubStmtVisitor) VisitReturnStatement(_ *ReturnStatement) error {
	return errors.New("visit func for ReturnStatement is not implemented")
}

func (s StubStmtVisitor) VisitRollbackStatement(_ *RollbackStatement) error {
	return errors.New("visit func for RollbackStatement is not implemented")
}

func (s StubStmtVisitor) VisitSelectStatement(_ *SelectStatement) error {
	return errors.New("visit func for SelectStatement is not implemented")
}

func (s StubStmtVisitor) VisitSetOperationStatement(_ *SetOperationStatement) error {
	return errors.New("visit func for SetOperationStatement is not implemented")
}

func (s StubStmtVisitor) VisitUpdateStatement(_ *UpdateStatement) error {
	return errors.New("visit func for UpdateStatement is not implemented")
}

func (s StubStmtVisitor) VisitAutonomousTransactionDeclaration(_ *AutonomousTransactionDeclaration) error {
	return errors.New("visit func for AutonomousTransactionDeclaration is not implemented")
}

func (s StubStmtVisitor) VisitCursorDeclaration(_ *CursorDeclaration) error {
	return errors.New("visit func for CursorDeclaration is not implemented")
}

func (s StubStmtVisitor) VisitExceptionDeclaration(_ *ExceptionDeclaration) error {
	return errors.New("visit func for ExceptionDeclaration is not implemented")
}

func (s StubStmtVisitor) VisitFunctionDeclaration(_ *FunctionDeclaration) error {
	return errors.New("visit func for FunctionDeclaration is not implemented")
}

func (s StubStmtVisitor) VisitNestTableTypeDeclaration(_ *NestTableTypeDeclaration) error {
	return errors.New("visit func for NestTableTypeDeclaration is not implemented")
}

func (s StubStmtVisitor) VisitVariableDeclaration(_ *VariableDeclaration) error {
	return errors.New("visit func for VariableDeclaration is not implemented")
}

func (b *AssignmentStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitAssignmentStatement(b)
}

func (b *BlockStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitBlockStatement(b)
}

func (b *Body) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitBody(b)
}

func (b *CaseWhenStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitCaseWhenStatement(b)
}

func (b *CloseStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitCloseStatement(b)
}

func (b *CommitStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitCommitStatement(b)
}

func (b *ContinueStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitContinueStatement(b)
}

func (b *CreateFunctionStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitCreateFunctionStatement(b)
}

func (b *CreateNestTableStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitCreateNestTableStatement(b)
}

func (b *CreatePackageBodyStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitCreatePackageBodyStatement(b)
}

func (b *CreatePackageStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitCreatePackageStatement(b)
}

func (b *CreateProcedureStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitCreateProcedureStatement(b)
}

func (b *CreateSynonymStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitCreateSynonymStatement(b)
}

func (b *CreateTypeStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitCreateTypeStatement(b)
}

func (b *DeleteStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitDeleteStatement(b)
}

func (b *DropFunctionStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitDropFunctionStatement(b)
}

func (b *DropPackageStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitDropPackageStatement(b)
}

func (b *DropProcedureStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitDropProcedureStatement(b)
}

func (b *DropTriggerStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitDropTriggerStatement(b)
}

func (b *ExecuteImmediateStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitExecuteImmediateStatement(b)
}

func (b *ExitStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitExitStatement(b)
}

func (b *FetchStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitFetchStatement(b)
}

func (b *GotoStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitGotoStatement(b)
}

func (b *IfStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitIfStatement(b)
}

func (b *InsertStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitInsertStatement(b)
}

func (b *LabelDeclaration) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitLabelDeclaration(b)
}

func (b *LoopStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitLoopStatement(b)
}

func (b *MergeInsertStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitMergeInsertStatement(b)
}

func (b *MergeStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitMergeStatement(b)
}

func (b *MergeUpdateStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitMergeUpdateStatement(b)
}

func (b *NullStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitNullStatement(b)
}

func (b *OpenForStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitOpenForStatement(b)
}

func (b *OpenStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitOpenStatement(b)
}

func (b *ProcedureCall) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitProcedureCall(b)
}

func (b *RaiseStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitRaiseStatement(b)
}

func (b *ReturnStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitReturnStatement(b)
}

func (b *RollbackStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitRollbackStatement(b)
}

func (b *SelectStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitSelectStatement(b)
}

func (b *SetOperationStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitSetOperationStatement(b)
}

func (b *UpdateStatement) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitUpdateStatement(b)
}

func (b *AutonomousTransactionDeclaration) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitAutonomousTransactionDeclaration(b)
}

func (b *CursorDeclaration) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitCursorDeclaration(b)
}

func (b *ExceptionDeclaration) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitExceptionDeclaration(b)
}

func (b *FunctionDeclaration) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitFunctionDeclaration(b)
}

func (b *NestTableTypeDeclaration) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitNestTableTypeDeclaration(b)
}

func (b *VariableDeclaration) StmtAccept(visitor StmtVisitor) (err error) {
	return visitor.VisitVariableDeclaration(b)
}

type NodeVisitor interface {
	VisitChildren(n AstNode) (err error)
	VisitAliasExpression(v *AliasExpression) (err error)
	VisitArgument(v *Argument) (err error)
	VisitAssignmentStatement(v *AssignmentStatement) (err error)
	VisitAutonomousTransactionDeclaration(v *AutonomousTransactionDeclaration) (err error)
	VisitBetweenExpression(v *BetweenExpression) (err error)
	VisitBinaryExpression(v *BinaryExpression) (err error)
	VisitBindNameExpression(v *BindNameExpression) (err error)
	VisitBlockStatement(v *BlockStatement) (err error)
	VisitBody(v *Body) (err error)
	VisitCaseWhenBlock(v *CaseWhenBlock) (err error)
	VisitCaseWhenStatement(v *CaseWhenStatement) (err error)
	VisitCastExpression(v *CastExpression) (err error)
	VisitCloseStatement(v *CloseStatement) (err error)
	VisitCommitStatement(v *CommitStatement) (err error)
	VisitCommonTableExpression(v *CommonTableExpression) (err error)
	VisitContinueStatement(v *ContinueStatement) (err error)
	VisitCreateFunctionStatement(v *CreateFunctionStatement) (err error)
	VisitCreateNestTableStatement(v *CreateNestTableStatement) (err error)
	VisitCreatePackageBodyStatement(v *CreatePackageBodyStatement) (err error)
	VisitCreatePackageStatement(v *CreatePackageStatement) (err error)
	VisitCreateProcedureStatement(v *CreateProcedureStatement) (err error)
	VisitCreateSynonymStatement(v *CreateSynonymStatement) (err error)
	VisitCreateTypeStatement(v *CreateTypeStatement) (err error)
	VisitCursorAttribute(v *CursorAttribute) (err error)
	VisitCursorDeclaration(v *CursorDeclaration) (err error)
	VisitDeleteStatement(v *DeleteStatement) (err error)
	VisitDotExpression(v *DotExpression) (err error)
	VisitDropFunctionStatement(v *DropFunctionStatement) (err error)
	VisitDropPackageStatement(v *DropPackageStatement) (err error)
	VisitDropProcedureStatement(v *DropProcedureStatement) (err error)
	VisitDropTriggerStatement(v *DropTriggerStatement) (err error)
	VisitElseBlock(v *ElseBlock) (err error)
	VisitExceptionDeclaration(v *ExceptionDeclaration) (err error)
	VisitExecuteImmediateStatement(v *ExecuteImmediateStatement) (err error)
	VisitExistsExpression(v *ExistsExpression) (err error)
	VisitExitStatement(v *ExitStatement) (err error)
	VisitExprListExpression(v *ExprListExpression) (err error)
	VisitFetchStatement(v *FetchStatement) (err error)
	VisitFieldList(v *FieldList) (err error)
	VisitForUpdateClause(v *ForUpdateClause) (err error)
	VisitForUpdateOptionsExpression(v *ForUpdateOptionsExpression) (err error)
	VisitFromClause(v *FromClause) (err error)
	VisitFunctionCallExpression(v *FunctionCallExpression) (err error)
	VisitFunctionDeclaration(v *FunctionDeclaration) (err error)
	VisitGotoStatement(v *GotoStatement) (err error)
	VisitIfStatement(v *IfStatement) (err error)
	VisitInExpression(v *InExpression) (err error)
	VisitInsertIntoClause(v *InsertIntoClause) (err error)
	VisitInsertStatement(v *InsertStatement) (err error)
	VisitIntoClause(v *IntoClause) (err error)
	VisitLabelDeclaration(v *LabelDeclaration) (err error)
	VisitLikeExpression(v *LikeExpression) (err error)
	VisitListaggExpression(v *ListaggExpression) (err error)
	VisitLoopStatement(v *LoopStatement) (err error)
	VisitMergeInsertStatement(v *MergeInsertStatement) (err error)
	VisitMergeStatement(v *MergeStatement) (err error)
	VisitMergeUpdateStatement(v *MergeUpdateStatement) (err error)
	VisitNameExpression(v *NameExpression) (err error)
	VisitNamedArgumentExpression(v *NamedArgumentExpression) (err error)
	VisitNestTableTypeDeclaration(v *NestTableTypeDeclaration) (err error)
	VisitNullExpression(v *NullExpression) (err error)
	VisitNullStatement(v *NullStatement) (err error)
	VisitNumericLiteral(v *NumericLiteral) (err error)
	VisitOpenForStatement(v *OpenForStatement) (err error)
	VisitOpenStatement(v *OpenStatement) (err error)
	VisitOrderByClause(v *OrderByClause) (err error)
	VisitOrderByElement(v *OrderByElement) (err error)
	VisitOuterJoinExpression(v *OuterJoinExpression) (err error)
	VisitParameter(v *Parameter) (err error)
	VisitProcedureCall(v *ProcedureCall) (err error)
	VisitQueryExpression(v *QueryExpression) (err error)
	VisitRaiseStatement(v *RaiseStatement) (err error)
	VisitRelationalExpression(v *RelationalExpression) (err error)
	VisitReturnStatement(v *ReturnStatement) (err error)
	VisitRollbackStatement(v *RollbackStatement) (err error)
	VisitScript(v *Script) (err error)
	VisitSelectField(v *SelectField) (err error)
	VisitSelectStatement(v *SelectStatement) (err error)
	VisitSetOperationStatement(v *SetOperationStatement) (err error)
	VisitSignExpression(v *SignExpression) (err error)
	VisitStatementExpression(v *StatementExpression) (err error)
	VisitStringLiteral(v *StringLiteral) (err error)
	VisitTableRef(v *TableRef) (err error)
	VisitUnaryLogicalExpression(v *UnaryLogicalExpression) (err error)
	VisitUpdateStatement(v *UpdateStatement) (err error)
	VisitUsingClause(v *UsingClause) (err error)
	VisitUsingElement(v *UsingElement) (err error)
	VisitVariableDeclaration(v *VariableDeclaration) (err error)
	VisitWildCardField(v *WildCardField) (err error)
	VisitWithClause(v *WithClause) (err error)
}

type StubNodeVisitor struct{ NodeVisitor }

var _ NodeVisitor = &StubNodeVisitor{}

func (s *StubNodeVisitor) VisitAliasExpression(n *AliasExpression) error {
	return s.VisitChildren(n) // AliasExpression
}

func (s *StubNodeVisitor) VisitArgument(n *Argument) error {
	return s.VisitChildren(n) // Argument
}

func (s *StubNodeVisitor) VisitAssignmentStatement(n *AssignmentStatement) error {
	return s.VisitChildren(n) // AssignmentStatement
}

func (s *StubNodeVisitor) VisitAutonomousTransactionDeclaration(n *AutonomousTransactionDeclaration) error {
	return s.VisitChildren(n) // AutonomousTransactionDeclaration
}

func (s *StubNodeVisitor) VisitBetweenExpression(n *BetweenExpression) error {
	return s.VisitChildren(n) // BetweenExpression
}

func (s *StubNodeVisitor) VisitBinaryExpression(n *BinaryExpression) error {
	return s.VisitChildren(n) // BinaryExpression
}

func (s *StubNodeVisitor) VisitBindNameExpression(n *BindNameExpression) error {
	return s.VisitChildren(n) // BindNameExpression
}

func (s *StubNodeVisitor) VisitBlockStatement(n *BlockStatement) error {
	return s.VisitChildren(n) // BlockStatement
}

func (s *StubNodeVisitor) VisitBody(n *Body) error {
	return s.VisitChildren(n) // Body
}

func (s *StubNodeVisitor) VisitCaseWhenBlock(n *CaseWhenBlock) error {
	return s.VisitChildren(n) // CaseWhenBlock
}

func (s *StubNodeVisitor) VisitCaseWhenStatement(n *CaseWhenStatement) error {
	return s.VisitChildren(n) // CaseWhenStatement
}

func (s *StubNodeVisitor) VisitCastExpression(n *CastExpression) error {
	return s.VisitChildren(n) // CastExpression
}

func (s *StubNodeVisitor) VisitCloseStatement(n *CloseStatement) error {
	return s.VisitChildren(n) // CloseStatement
}

func (s *StubNodeVisitor) VisitCommitStatement(n *CommitStatement) error {
	return s.VisitChildren(n) // CommitStatement
}

func (s *StubNodeVisitor) VisitCommonTableExpression(n *CommonTableExpression) error {
	return s.VisitChildren(n) // CommonTableExpression
}

func (s *StubNodeVisitor) VisitContinueStatement(n *ContinueStatement) error {
	return s.VisitChildren(n) // ContinueStatement
}

func (s *StubNodeVisitor) VisitCreateFunctionStatement(n *CreateFunctionStatement) error {
	return s.VisitChildren(n) // CreateFunctionStatement
}

func (s *StubNodeVisitor) VisitCreateNestTableStatement(n *CreateNestTableStatement) error {
	return s.VisitChildren(n) // CreateNestTableStatement
}

func (s *StubNodeVisitor) VisitCreatePackageBodyStatement(n *CreatePackageBodyStatement) error {
	return s.VisitChildren(n) // CreatePackageBodyStatement
}

func (s *StubNodeVisitor) VisitCreatePackageStatement(n *CreatePackageStatement) error {
	return s.VisitChildren(n) // CreatePackageStatement
}

func (s *StubNodeVisitor) VisitCreateProcedureStatement(n *CreateProcedureStatement) error {
	return s.VisitChildren(n) // CreateProcedureStatement
}

func (s *StubNodeVisitor) VisitCreateSynonymStatement(n *CreateSynonymStatement) error {
	return s.VisitChildren(n) // CreateSynonymStatement
}

func (s *StubNodeVisitor) VisitCreateTypeStatement(n *CreateTypeStatement) error {
	return s.VisitChildren(n) // CreateTypeStatement
}

func (s *StubNodeVisitor) VisitCursorAttribute(n *CursorAttribute) error {
	return s.VisitChildren(n) // CursorAttribute
}

func (s *StubNodeVisitor) VisitCursorDeclaration(n *CursorDeclaration) error {
	return s.VisitChildren(n) // CursorDeclaration
}

func (s *StubNodeVisitor) VisitDeleteStatement(n *DeleteStatement) error {
	return s.VisitChildren(n) // DeleteStatement
}

func (s *StubNodeVisitor) VisitDotExpression(n *DotExpression) error {
	return s.VisitChildren(n) // DotExpression
}

func (s *StubNodeVisitor) VisitDropFunctionStatement(n *DropFunctionStatement) error {
	return s.VisitChildren(n) // DropFunctionStatement
}

func (s *StubNodeVisitor) VisitDropPackageStatement(n *DropPackageStatement) error {
	return s.VisitChildren(n) // DropPackageStatement
}

func (s *StubNodeVisitor) VisitDropProcedureStatement(n *DropProcedureStatement) error {
	return s.VisitChildren(n) // DropProcedureStatement
}

func (s *StubNodeVisitor) VisitDropTriggerStatement(n *DropTriggerStatement) error {
	return s.VisitChildren(n) // DropTriggerStatement
}

func (s *StubNodeVisitor) VisitElseBlock(n *ElseBlock) error {
	return s.VisitChildren(n) // ElseBlock
}

func (s *StubNodeVisitor) VisitExceptionDeclaration(n *ExceptionDeclaration) error {
	return s.VisitChildren(n) // ExceptionDeclaration
}

func (s *StubNodeVisitor) VisitExecuteImmediateStatement(n *ExecuteImmediateStatement) error {
	return s.VisitChildren(n) // ExecuteImmediateStatement
}

func (s *StubNodeVisitor) VisitExistsExpression(n *ExistsExpression) error {
	return s.VisitChildren(n) // ExistsExpression
}

func (s *StubNodeVisitor) VisitExitStatement(n *ExitStatement) error {
	return s.VisitChildren(n) // ExitStatement
}

func (s *StubNodeVisitor) VisitExprListExpression(n *ExprListExpression) error {
	return s.VisitChildren(n) // ExprListExpression
}

func (s *StubNodeVisitor) VisitFetchStatement(n *FetchStatement) error {
	return s.VisitChildren(n) // FetchStatement
}

func (s *StubNodeVisitor) VisitFieldList(n *FieldList) error {
	return s.VisitChildren(n) // FieldList
}

func (s *StubNodeVisitor) VisitForUpdateClause(n *ForUpdateClause) error {
	return s.VisitChildren(n) // ForUpdateClause
}

func (s *StubNodeVisitor) VisitForUpdateOptionsExpression(n *ForUpdateOptionsExpression) error {
	return s.VisitChildren(n) // ForUpdateOptionsExpression
}

func (s *StubNodeVisitor) VisitFromClause(n *FromClause) error {
	return s.VisitChildren(n) // FromClause
}

func (s *StubNodeVisitor) VisitFunctionCallExpression(n *FunctionCallExpression) error {
	return s.VisitChildren(n) // FunctionCallExpression
}

func (s *StubNodeVisitor) VisitFunctionDeclaration(n *FunctionDeclaration) error {
	return s.VisitChildren(n) // FunctionDeclaration
}

func (s *StubNodeVisitor) VisitGotoStatement(n *GotoStatement) error {
	return s.VisitChildren(n) // GotoStatement
}

func (s *StubNodeVisitor) VisitIfStatement(n *IfStatement) error {
	return s.VisitChildren(n) // IfStatement
}

func (s *StubNodeVisitor) VisitInExpression(n *InExpression) error {
	return s.VisitChildren(n) // InExpression
}

func (s *StubNodeVisitor) VisitInsertIntoClause(n *InsertIntoClause) error {
	return s.VisitChildren(n) // InsertIntoClause
}

func (s *StubNodeVisitor) VisitInsertStatement(n *InsertStatement) error {
	return s.VisitChildren(n) // InsertStatement
}

func (s *StubNodeVisitor) VisitIntoClause(n *IntoClause) error {
	return s.VisitChildren(n) // IntoClause
}

func (s *StubNodeVisitor) VisitLabelDeclaration(n *LabelDeclaration) error {
	return s.VisitChildren(n) // LabelDeclaration
}

func (s *StubNodeVisitor) VisitLikeExpression(n *LikeExpression) error {
	return s.VisitChildren(n) // LikeExpression
}

func (s *StubNodeVisitor) VisitListaggExpression(n *ListaggExpression) error {
	return s.VisitChildren(n) // ListaggExpression
}

func (s *StubNodeVisitor) VisitLoopStatement(n *LoopStatement) error {
	return s.VisitChildren(n) // LoopStatement
}

func (s *StubNodeVisitor) VisitMergeInsertStatement(n *MergeInsertStatement) error {
	return s.VisitChildren(n) // MergeInsertStatement
}

func (s *StubNodeVisitor) VisitMergeStatement(n *MergeStatement) error {
	return s.VisitChildren(n) // MergeStatement
}

func (s *StubNodeVisitor) VisitMergeUpdateStatement(n *MergeUpdateStatement) error {
	return s.VisitChildren(n) // MergeUpdateStatement
}

func (s *StubNodeVisitor) VisitNameExpression(n *NameExpression) error {
	return s.VisitChildren(n) // NameExpression
}

func (s *StubNodeVisitor) VisitNamedArgumentExpression(n *NamedArgumentExpression) error {
	return s.VisitChildren(n) // NamedArgumentExpression
}

func (s *StubNodeVisitor) VisitNestTableTypeDeclaration(n *NestTableTypeDeclaration) error {
	return s.VisitChildren(n) // NestTableTypeDeclaration
}

func (s *StubNodeVisitor) VisitNullExpression(n *NullExpression) error {
	return s.VisitChildren(n) // NullExpression
}

func (s *StubNodeVisitor) VisitNullStatement(n *NullStatement) error {
	return s.VisitChildren(n) // NullStatement
}

func (s *StubNodeVisitor) VisitNumericLiteral(n *NumericLiteral) error {
	return s.VisitChildren(n) // NumericLiteral
}

func (s *StubNodeVisitor) VisitOpenForStatement(n *OpenForStatement) error {
	return s.VisitChildren(n) // OpenForStatement
}

func (s *StubNodeVisitor) VisitOpenStatement(n *OpenStatement) error {
	return s.VisitChildren(n) // OpenStatement
}

func (s *StubNodeVisitor) VisitOrderByClause(n *OrderByClause) error {
	return s.VisitChildren(n) // OrderByClause
}

func (s *StubNodeVisitor) VisitOrderByElement(n *OrderByElement) error {
	return s.VisitChildren(n) // OrderByElement
}

func (s *StubNodeVisitor) VisitOuterJoinExpression(n *OuterJoinExpression) error {
	return s.VisitChildren(n) // OuterJoinExpression
}

func (s *StubNodeVisitor) VisitParameter(n *Parameter) error {
	return s.VisitChildren(n) // Parameter
}

func (s *StubNodeVisitor) VisitProcedureCall(n *ProcedureCall) error {
	return s.VisitChildren(n) // ProcedureCall
}

func (s *StubNodeVisitor) VisitQueryExpression(n *QueryExpression) error {
	return s.VisitChildren(n) // QueryExpression
}

func (s *StubNodeVisitor) VisitRaiseStatement(n *RaiseStatement) error {
	return s.VisitChildren(n) // RaiseStatement
}

func (s *StubNodeVisitor) VisitRelationalExpression(n *RelationalExpression) error {
	return s.VisitChildren(n) // RelationalExpression
}

func (s *StubNodeVisitor) VisitReturnStatement(n *ReturnStatement) error {
	return s.VisitChildren(n) // ReturnStatement
}

func (s *StubNodeVisitor) VisitRollbackStatement(n *RollbackStatement) error {
	return s.VisitChildren(n) // RollbackStatement
}

func (s *StubNodeVisitor) VisitScript(n *Script) error {
	return s.VisitChildren(n) // Script
}

func (s *StubNodeVisitor) VisitSelectField(n *SelectField) error {
	return s.VisitChildren(n) // SelectField
}

func (s *StubNodeVisitor) VisitSelectStatement(n *SelectStatement) error {
	return s.VisitChildren(n) // SelectStatement
}

func (s *StubNodeVisitor) VisitSetOperationStatement(n *SetOperationStatement) error {
	return s.VisitChildren(n) // SetOperationStatement
}

func (s *StubNodeVisitor) VisitSignExpression(n *SignExpression) error {
	return s.VisitChildren(n) // SignExpression
}

func (s *StubNodeVisitor) VisitStatementExpression(n *StatementExpression) error {
	return s.VisitChildren(n) // StatementExpression
}

func (s *StubNodeVisitor) VisitStringLiteral(n *StringLiteral) error {
	return s.VisitChildren(n) // StringLiteral
}

func (s *StubNodeVisitor) VisitTableRef(n *TableRef) error {
	return s.VisitChildren(n) // TableRef
}

func (s *StubNodeVisitor) VisitUnaryLogicalExpression(n *UnaryLogicalExpression) error {
	return s.VisitChildren(n) // UnaryLogicalExpression
}

func (s *StubNodeVisitor) VisitUpdateStatement(n *UpdateStatement) error {
	return s.VisitChildren(n) // UpdateStatement
}

func (s *StubNodeVisitor) VisitUsingClause(n *UsingClause) error {
	return s.VisitChildren(n) // UsingClause
}

func (s *StubNodeVisitor) VisitUsingElement(n *UsingElement) error {
	return s.VisitChildren(n) // UsingElement
}

func (s *StubNodeVisitor) VisitVariableDeclaration(n *VariableDeclaration) error {
	return s.VisitChildren(n) // VariableDeclaration
}

func (s *StubNodeVisitor) VisitWildCardField(n *WildCardField) error {
	return s.VisitChildren(n) // WildCardField
}

func (s *StubNodeVisitor) VisitWithClause(n *WithClause) error {
	return s.VisitChildren(n) // WithClause
}

func (b AliasExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitAliasExpression(&b)
}

func (b Argument) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitArgument(&b)
}

func (b AssignmentStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitAssignmentStatement(&b)
}

func (b AutonomousTransactionDeclaration) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitAutonomousTransactionDeclaration(&b)
}

func (b BetweenExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitBetweenExpression(&b)
}

func (b BinaryExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitBinaryExpression(&b)
}

func (b BindNameExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitBindNameExpression(&b)
}

func (b BlockStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitBlockStatement(&b)
}

func (b Body) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitBody(&b)
}

func (b CaseWhenBlock) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitCaseWhenBlock(&b)
}

func (b CaseWhenStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitCaseWhenStatement(&b)
}

func (b CastExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitCastExpression(&b)
}

func (b CloseStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitCloseStatement(&b)
}

func (b CommitStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitCommitStatement(&b)
}

func (b CommonTableExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitCommonTableExpression(&b)
}

func (b ContinueStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitContinueStatement(&b)
}

func (b CreateFunctionStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitCreateFunctionStatement(&b)
}

func (b CreateNestTableStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitCreateNestTableStatement(&b)
}

func (b CreatePackageBodyStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitCreatePackageBodyStatement(&b)
}

func (b CreatePackageStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitCreatePackageStatement(&b)
}

func (b CreateProcedureStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitCreateProcedureStatement(&b)
}

func (b CreateSynonymStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitCreateSynonymStatement(&b)
}

func (b CreateTypeStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitCreateTypeStatement(&b)
}

func (b CursorAttribute) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitCursorAttribute(&b)
}

func (b CursorDeclaration) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitCursorDeclaration(&b)
}

func (b DeleteStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitDeleteStatement(&b)
}

func (b DotExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitDotExpression(&b)
}

func (b DropFunctionStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitDropFunctionStatement(&b)
}

func (b DropPackageStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitDropPackageStatement(&b)
}

func (b DropProcedureStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitDropProcedureStatement(&b)
}

func (b DropTriggerStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitDropTriggerStatement(&b)
}

func (b ElseBlock) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitElseBlock(&b)
}

func (b ExceptionDeclaration) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitExceptionDeclaration(&b)
}

func (b ExecuteImmediateStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitExecuteImmediateStatement(&b)
}

func (b ExistsExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitExistsExpression(&b)
}

func (b ExitStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitExitStatement(&b)
}

func (b ExprListExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitExprListExpression(&b)
}

func (b FetchStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitFetchStatement(&b)
}

func (b FieldList) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitFieldList(&b)
}

func (b ForUpdateClause) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitForUpdateClause(&b)
}

func (b ForUpdateOptionsExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitForUpdateOptionsExpression(&b)
}

func (b FromClause) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitFromClause(&b)
}

func (b FunctionCallExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitFunctionCallExpression(&b)
}

func (b FunctionDeclaration) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitFunctionDeclaration(&b)
}

func (b GotoStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitGotoStatement(&b)
}

func (b IfStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitIfStatement(&b)
}

func (b InExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitInExpression(&b)
}

func (b InsertIntoClause) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitInsertIntoClause(&b)
}

func (b InsertStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitInsertStatement(&b)
}

func (b IntoClause) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitIntoClause(&b)
}

func (b LabelDeclaration) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitLabelDeclaration(&b)
}

func (b LikeExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitLikeExpression(&b)
}

func (b ListaggExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitListaggExpression(&b)
}

func (b LoopStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitLoopStatement(&b)
}

func (b MergeInsertStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitMergeInsertStatement(&b)
}

func (b MergeStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitMergeStatement(&b)
}

func (b MergeUpdateStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitMergeUpdateStatement(&b)
}

func (b NameExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitNameExpression(&b)
}

func (b NamedArgumentExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitNamedArgumentExpression(&b)
}

func (b NestTableTypeDeclaration) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitNestTableTypeDeclaration(&b)
}

func (b NullExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitNullExpression(&b)
}

func (b NullStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitNullStatement(&b)
}

func (b NumericLiteral) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitNumericLiteral(&b)
}

func (b OpenForStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitOpenForStatement(&b)
}

func (b OpenStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitOpenStatement(&b)
}

func (b OrderByClause) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitOrderByClause(&b)
}

func (b OrderByElement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitOrderByElement(&b)
}

func (b OuterJoinExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitOuterJoinExpression(&b)
}

func (b Parameter) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitParameter(&b)
}

func (b ProcedureCall) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitProcedureCall(&b)
}

func (b QueryExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitQueryExpression(&b)
}

func (b RaiseStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitRaiseStatement(&b)
}

func (b RelationalExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitRelationalExpression(&b)
}

func (b ReturnStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitReturnStatement(&b)
}

func (b RollbackStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitRollbackStatement(&b)
}

func (b Script) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitScript(&b)
}

func (b SelectField) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitSelectField(&b)
}

func (b SelectStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitSelectStatement(&b)
}

func (b SetOperationStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitSetOperationStatement(&b)
}

func (b SignExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitSignExpression(&b)
}

func (b StatementExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitStatementExpression(&b)
}

func (b StringLiteral) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitStringLiteral(&b)
}

func (b TableRef) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitTableRef(&b)
}

func (b UnaryLogicalExpression) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitUnaryLogicalExpression(&b)
}

func (b UpdateStatement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitUpdateStatement(&b)
}

func (b UsingClause) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitUsingClause(&b)
}

func (b UsingElement) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitUsingElement(&b)
}

func (b VariableDeclaration) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitVariableDeclaration(&b)
}

func (b WildCardField) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitWildCardField(&b)
}

func (b WithClause) Accept(visitor NodeVisitor) (err error) {
	return visitor.VisitWithClause(&b)
}

var register = sync.OnceFunc(func() {
	gob.Register(&AliasExpression{})
	gob.Register(&Argument{})
	gob.Register(&AssignmentStatement{})
	gob.Register(&AutonomousTransactionDeclaration{})
	gob.Register(&BetweenExpression{})
	gob.Register(&BinaryExpression{})
	gob.Register(&BindNameExpression{})
	gob.Register(&BlockStatement{})
	gob.Register(&Body{})
	gob.Register(&CaseWhenBlock{})
	gob.Register(&CaseWhenStatement{})
	gob.Register(&CastExpression{})
	gob.Register(&CloseStatement{})
	gob.Register(&CommitStatement{})
	gob.Register(&CommonTableExpression{})
	gob.Register(&ContinueStatement{})
	gob.Register(&CreateFunctionStatement{})
	gob.Register(&CreateNestTableStatement{})
	gob.Register(&CreatePackageBodyStatement{})
	gob.Register(&CreatePackageStatement{})
	gob.Register(&CreateProcedureStatement{})
	gob.Register(&CreateSynonymStatement{})
	gob.Register(&CreateTypeStatement{})
	gob.Register(&CursorAttribute{})
	gob.Register(&CursorDeclaration{})
	gob.Register(&DeleteStatement{})
	gob.Register(&DotExpression{})
	gob.Register(&DropFunctionStatement{})
	gob.Register(&DropPackageStatement{})
	gob.Register(&DropProcedureStatement{})
	gob.Register(&DropTriggerStatement{})
	gob.Register(&ElseBlock{})
	gob.Register(&ExceptionDeclaration{})
	gob.Register(&ExecuteImmediateStatement{})
	gob.Register(&ExistsExpression{})
	gob.Register(&ExitStatement{})
	gob.Register(&ExprListExpression{})
	gob.Register(&FetchStatement{})
	gob.Register(&FieldList{})
	gob.Register(&ForUpdateClause{})
	gob.Register(&ForUpdateOptionsExpression{})
	gob.Register(&FromClause{})
	gob.Register(&FunctionCallExpression{})
	gob.Register(&FunctionDeclaration{})
	gob.Register(&GotoStatement{})
	gob.Register(&IfStatement{})
	gob.Register(&InExpression{})
	gob.Register(&InsertIntoClause{})
	gob.Register(&InsertStatement{})
	gob.Register(&IntoClause{})
	gob.Register(&LabelDeclaration{})
	gob.Register(&LikeExpression{})
	gob.Register(&ListaggExpression{})
	gob.Register(&LoopStatement{})
	gob.Register(&MergeInsertStatement{})
	gob.Register(&MergeStatement{})
	gob.Register(&MergeUpdateStatement{})
	gob.Register(&NameExpression{})
	gob.Register(&NamedArgumentExpression{})
	gob.Register(&NestTableTypeDeclaration{})
	gob.Register(&NullExpression{})
	gob.Register(&NullStatement{})
	gob.Register(&NumericLiteral{})
	gob.Register(&OpenForStatement{})
	gob.Register(&OpenStatement{})
	gob.Register(&OrderByClause{})
	gob.Register(&OrderByElement{})
	gob.Register(&OuterJoinExpression{})
	gob.Register(&Parameter{})
	gob.Register(&ProcedureCall{})
	gob.Register(&QueryExpression{})
	gob.Register(&RaiseStatement{})
	gob.Register(&RelationalExpression{})
	gob.Register(&ReturnStatement{})
	gob.Register(&RollbackStatement{})
	gob.Register(&Script{})
	gob.Register(&SelectField{})
	gob.Register(&SelectStatement{})
	gob.Register(&SetOperationStatement{})
	gob.Register(&SignExpression{})
	gob.Register(&StatementExpression{})
	gob.Register(&StringLiteral{})
	gob.Register(&TableRef{})
	gob.Register(&UnaryLogicalExpression{})
	gob.Register(&UpdateStatement{})
	gob.Register(&UsingClause{})
	gob.Register(&UsingElement{})
	gob.Register(&VariableDeclaration{})
	gob.Register(&WildCardField{})
	gob.Register(&WithClause{})
})
